def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def googleMapsApiKey = localProperties.getProperty('api.googleMapsApiKey')
if (googleMapsApiKey == null) {
    googleMapsApiKey = ''
}

def buildKeyPass = localProperties.getProperty('build.keyPass')
if (buildKeyPass == null) {
    buildKeyPass = ''
}

def buildStorePass = localProperties.getProperty('build.storePass')
if (buildStorePass == null) {
    buildStorePass = ''
}


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30
    ndkVersion "21.3.6528147"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.blackdog.coffee"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [googleMapsApiKey: googleMapsApiKey]
    }

    signingConfigs {
        release {
            storeFile file("key_black_dog.jks")
            storePassword buildStorePass
            keyAlias "black_dog"
            keyPassword buildKeyPass
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.4'
}

apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'
